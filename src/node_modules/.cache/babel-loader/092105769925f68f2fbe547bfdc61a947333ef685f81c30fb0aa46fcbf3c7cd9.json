{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\wave-grid\\\\src\\\\Grid.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Grid = ({\n  rows,\n  columns\n}) => {\n  _s();\n  const initialGrid = Array.from({\n    length: rows\n  }, () => Array(columns).fill(\"gray\"));\n  const [grid, setGrid] = useState(initialGrid);\n  const [direction, setDirection] = useState(1); // 1 for right, -1 for left\n  const [waveColumn, setWaveColumn] = useState(0);\n\n  // Update the grid with the bouncing wave pattern\n  const updateWave = () => {\n    const newGrid = Array.from({\n      length: rows\n    }, () => Array(columns).fill(\"gray\"));\n\n    // Highlight the wave column\n    for (let i = 0; i < rows; i++) {\n      const colorIntensity = 255 - Math.abs(i - rows / 2) * 20;\n      newGrid[i][waveColumn] = `rgb(${colorIntensity}, 0, 255)`;\n    }\n    setGrid(newGrid);\n\n    // Update wave column position\n    if (waveColumn + direction >= columns || waveColumn + direction < 0) {\n      setDirection(-direction); // Reverse direction\n    }\n    setWaveColumn(waveColumn + direction);\n  };\n  useEffect(() => {\n    const interval = setInterval(updateWave, 200); // Update every 200ms\n    return () => clearInterval(interval); // Cleanup on unmount\n  }, [waveColumn, direction]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: `repeat(${columns}, 30px)`\n    },\n    children: grid.map((row, i) => row.map((color, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"square\",\n      style: {\n        backgroundColor: color\n      }\n    }, `${i}-${j}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Grid, \"c4DO7hw6LB5E4nUImdS/6SfvWfM=\");\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Grid","rows","columns","_s","initialGrid","Array","from","length","fill","grid","setGrid","direction","setDirection","waveColumn","setWaveColumn","updateWave","newGrid","i","colorIntensity","Math","abs","interval","setInterval","clearInterval","className","style","display","gridTemplateColumns","children","map","row","color","j","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Hp/wave-grid/src/Grid.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\n\r\nconst Grid = ({ rows, columns }) => {\r\n  const initialGrid = Array.from({ length: rows }, () =>\r\n    Array(columns).fill(\"gray\")\r\n  );\r\n  const [grid, setGrid] = useState(initialGrid);\r\n  const [direction, setDirection] = useState(1); // 1 for right, -1 for left\r\n  const [waveColumn, setWaveColumn] = useState(0);\r\n\r\n  // Update the grid with the bouncing wave pattern\r\n  const updateWave = () => {\r\n    const newGrid = Array.from({ length: rows }, () =>\r\n      Array(columns).fill(\"gray\")\r\n    );\r\n\r\n    // Highlight the wave column\r\n    for (let i = 0; i < rows; i++) {\r\n      const colorIntensity = 255 - Math.abs(i - rows / 2) * 20;\r\n      newGrid[i][waveColumn] = `rgb(${colorIntensity}, 0, 255)`;\r\n    }\r\n\r\n    setGrid(newGrid);\r\n\r\n    // Update wave column position\r\n    if (waveColumn + direction >= columns || waveColumn + direction < 0) {\r\n      setDirection(-direction); // Reverse direction\r\n    }\r\n    setWaveColumn(waveColumn + direction);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(updateWave, 200); // Update every 200ms\r\n    return () => clearInterval(interval); // Cleanup on unmount\r\n  }, [waveColumn, direction]);\r\n\r\n  return (\r\n    <div\r\n      className=\"grid\"\r\n      style={{\r\n        display: \"grid\",\r\n        gridTemplateColumns: `repeat(${columns}, 30px)`,\r\n      }}\r\n    >\r\n      {grid.map((row, i) =>\r\n        row.map((color, j) => (\r\n          <div\r\n            key={`${i}-${j}`}\r\n            className=\"square\"\r\n            style={{ backgroundColor: color }}\r\n          ></div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,IAAI,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAMC,WAAW,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEN;EAAK,CAAC,EAAE,MAC/CI,KAAK,CAACH,OAAO,CAAC,CAACM,IAAI,CAAC,MAAM,CAC5B,CAAC;EACD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAACQ,WAAW,CAAC;EAC7C,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;;EAE/C;EACA,MAAMmB,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMC,OAAO,GAAGX,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEN;IAAK,CAAC,EAAE,MAC3CI,KAAK,CAACH,OAAO,CAAC,CAACM,IAAI,CAAC,MAAM,CAC5B,CAAC;;IAED;IACA,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGhB,IAAI,EAAEgB,CAAC,EAAE,EAAE;MAC7B,MAAMC,cAAc,GAAG,GAAG,GAAGC,IAAI,CAACC,GAAG,CAACH,CAAC,GAAGhB,IAAI,GAAG,CAAC,CAAC,GAAG,EAAE;MACxDe,OAAO,CAACC,CAAC,CAAC,CAACJ,UAAU,CAAC,GAAG,OAAOK,cAAc,WAAW;IAC3D;IAEAR,OAAO,CAACM,OAAO,CAAC;;IAEhB;IACA,IAAIH,UAAU,GAAGF,SAAS,IAAIT,OAAO,IAAIW,UAAU,GAAGF,SAAS,GAAG,CAAC,EAAE;MACnEC,YAAY,CAAC,CAACD,SAAS,CAAC,CAAC,CAAC;IAC5B;IACAG,aAAa,CAACD,UAAU,GAAGF,SAAS,CAAC;EACvC,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,MAAMwB,QAAQ,GAAGC,WAAW,CAACP,UAAU,EAAE,GAAG,CAAC,CAAC,CAAC;IAC/C,OAAO,MAAMQ,aAAa,CAACF,QAAQ,CAAC,CAAC,CAAC;EACxC,CAAC,EAAE,CAACR,UAAU,EAAEF,SAAS,CAAC,CAAC;EAE3B,oBACEZ,OAAA;IACEyB,SAAS,EAAC,MAAM;IAChBC,KAAK,EAAE;MACLC,OAAO,EAAE,MAAM;MACfC,mBAAmB,EAAE,UAAUzB,OAAO;IACxC,CAAE;IAAA0B,QAAA,EAEDnB,IAAI,CAACoB,GAAG,CAAC,CAACC,GAAG,EAAEb,CAAC,KACfa,GAAG,CAACD,GAAG,CAAC,CAACE,KAAK,EAAEC,CAAC,kBACfjC,OAAA;MAEEyB,SAAS,EAAC,QAAQ;MAClBC,KAAK,EAAE;QAAEQ,eAAe,EAAEF;MAAM;IAAE,GAF7B,GAAGd,CAAC,IAAIe,CAAC,EAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGZ,CACP,CACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClC,EAAA,CArDIH,IAAI;AAAAsC,EAAA,GAAJtC,IAAI;AAuDV,eAAeA,IAAI;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
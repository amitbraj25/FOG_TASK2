{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\wave-grid\\\\src\\\\Grid.js\",\n  _s = $RefreshSig$();\n// src/Grid.js\nimport React, { useState, useEffect } from \"react\";\nimport \"./Grid.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Grid = ({\n  rows = 15,\n  columns = 20,\n  timeout = 200\n}) => {\n  _s();\n  const [grid, setGrid] = useState(Array.from({\n    length: rows\n  }, () => Array(columns).fill(\"#000\")));\n  const [offset, setOffset] = useState(0); // To move the wave from right to left\n\n  const updateWave = () => {\n    setOffset(prevOffset => (prevOffset + 1) % columns); // Increment offset for leftward movement\n\n    const newGrid = Array.from({\n      length: rows\n    }, (_, row) => Array.from({\n      length: columns\n    }, (_, col) => {\n      // Calculate position with offset to create right-to-left motion\n      const waveEffect = Math.sin((row - (col + offset)) * 0.5); // Wave moves left\n      const intensity = Math.floor(Math.abs(waveEffect) * 255); // 0-255 for RGB\n      return `rgb(${255 - intensity}, 0, ${intensity})`; // Gradient from Red to Blue\n    }));\n    setGrid(newGrid);\n  };\n  useEffect(() => {\n    const interval = setInterval(updateWave, timeout); // Update every timeout milliseconds\n    return () => clearInterval(interval); // Clean up on unmount\n  }, [offset, timeout]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    style: {\n      gridTemplateColumns: `repeat(${columns}, 30px)`,\n      gridTemplateRows: `repeat(${rows}, 30px)`\n    },\n    children: grid.flat().map((color, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"square\",\n      style: {\n        backgroundColor: color\n      }\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Grid, \"YCxHpuP+ayb6fcZONZe42f0e/2s=\");\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Grid","rows","columns","timeout","_s","grid","setGrid","Array","from","length","fill","offset","setOffset","updateWave","prevOffset","newGrid","_","row","col","waveEffect","Math","sin","intensity","floor","abs","interval","setInterval","clearInterval","className","style","gridTemplateColumns","gridTemplateRows","children","flat","map","color","idx","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Hp/wave-grid/src/Grid.js"],"sourcesContent":[" // src/Grid.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./Grid.css\";\r\n\r\nconst Grid = ({ rows = 15, columns = 20, timeout = 200 }) => {\r\n  const [grid, setGrid] = useState(\r\n    Array.from({ length: rows }, () => Array(columns).fill(\"#000\"))\r\n  );\r\n  const [offset, setOffset] = useState(0); // To move the wave from right to left\r\n\r\n  const updateWave = () => {\r\n    setOffset((prevOffset) => (prevOffset + 1) % columns); // Increment offset for leftward movement\r\n\r\n    const newGrid = Array.from({ length: rows }, (_, row) =>\r\n      Array.from({ length: columns }, (_, col) => {\r\n        // Calculate position with offset to create right-to-left motion\r\n        const waveEffect = Math.sin((row - (col + offset)) * 0.5); // Wave moves left\r\n        const intensity = Math.floor(Math.abs(waveEffect) * 255); // 0-255 for RGB\r\n        return `rgb(${255 - intensity}, 0, ${intensity})`; // Gradient from Red to Blue\r\n      })\r\n    );\r\n    setGrid(newGrid);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(updateWave, timeout); // Update every timeout milliseconds\r\n    return () => clearInterval(interval); // Clean up on unmount\r\n  }, [offset, timeout]);\r\n\r\n  return (\r\n    <div\r\n      className=\"grid\"\r\n      style={{\r\n        gridTemplateColumns: `repeat(${columns}, 30px)`,\r\n        gridTemplateRows: `repeat(${rows}, 30px)`,\r\n      }}\r\n    >\r\n      {grid.flat().map((color, idx) => (\r\n        <div\r\n          key={idx}\r\n          className=\"square\"\r\n          style={{\r\n            backgroundColor: color,\r\n          }}\r\n        ></div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n"],"mappings":";;AAAC;AACD,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAC;EAAEC,IAAI,GAAG,EAAE;EAAEC,OAAO,GAAG,EAAE;EAAEC,OAAO,GAAG;AAAI,CAAC,KAAK;EAAAC,EAAA;EAC3D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAC9BW,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAER;EAAK,CAAC,EAAE,MAAMM,KAAK,CAACL,OAAO,CAAC,CAACQ,IAAI,CAAC,MAAM,CAAC,CAChE,CAAC;EACD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEzC,MAAMiB,UAAU,GAAGA,CAAA,KAAM;IACvBD,SAAS,CAAEE,UAAU,IAAK,CAACA,UAAU,GAAG,CAAC,IAAIZ,OAAO,CAAC,CAAC,CAAC;;IAEvD,MAAMa,OAAO,GAAGR,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAER;IAAK,CAAC,EAAE,CAACe,CAAC,EAAEC,GAAG,KAClDV,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEP;IAAQ,CAAC,EAAE,CAACc,CAAC,EAAEE,GAAG,KAAK;MAC1C;MACA,MAAMC,UAAU,GAAGC,IAAI,CAACC,GAAG,CAAC,CAACJ,GAAG,IAAIC,GAAG,GAAGP,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;MAC3D,MAAMW,SAAS,GAAGF,IAAI,CAACG,KAAK,CAACH,IAAI,CAACI,GAAG,CAACL,UAAU,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;MAC1D,OAAO,OAAO,GAAG,GAAGG,SAAS,QAAQA,SAAS,GAAG,CAAC,CAAC;IACrD,CAAC,CACH,CAAC;IACDhB,OAAO,CAACS,OAAO,CAAC;EAClB,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACd,MAAM4B,QAAQ,GAAGC,WAAW,CAACb,UAAU,EAAEV,OAAO,CAAC,CAAC,CAAC;IACnD,OAAO,MAAMwB,aAAa,CAACF,QAAQ,CAAC,CAAC,CAAC;EACxC,CAAC,EAAE,CAACd,MAAM,EAAER,OAAO,CAAC,CAAC;EAErB,oBACEJ,OAAA;IACE6B,SAAS,EAAC,MAAM;IAChBC,KAAK,EAAE;MACLC,mBAAmB,EAAE,UAAU5B,OAAO,SAAS;MAC/C6B,gBAAgB,EAAE,UAAU9B,IAAI;IAClC,CAAE;IAAA+B,QAAA,EAED3B,IAAI,CAAC4B,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,kBAC1BrC,OAAA;MAEE6B,SAAS,EAAC,QAAQ;MAClBC,KAAK,EAAE;QACLQ,eAAe,EAAEF;MACnB;IAAE,GAJGC,GAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKJ,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACrC,EAAA,CA5CIJ,IAAI;AAAA0C,EAAA,GAAJ1C,IAAI;AA8CV,eAAeA,IAAI;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
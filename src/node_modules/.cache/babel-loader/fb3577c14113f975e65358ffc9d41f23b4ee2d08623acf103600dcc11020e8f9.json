{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\wave-grid\\\\src\\\\Grid.js\",\n  _s = $RefreshSig$();\n// src/Grid.js\nimport React, { useState, useEffect } from \"react\";\nimport \"./Grid.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Grid = ({\n  rows = 15,\n  columns = 20,\n  timeout = 200\n}) => {\n  _s();\n  const [offset, setOffset] = useState(columns - 1); // Start from the rightmost column\n\n  // Generate grid with a vertical line at the current offset\n  const generateGrid = () => {\n    return Array.from({\n      length: rows\n    }, (_, row) => Array.from({\n      length: columns\n    }, (_, col) => {\n      if (col === offset) {\n        // Random color for the moving line\n        const randomRed = Math.floor(Math.random() * 256);\n        const randomGreen = Math.floor(Math.random() * 256);\n        const randomBlue = Math.floor(Math.random() * 256);\n        return `rgb(${randomRed}, ${randomGreen}, ${randomBlue})`;\n      }\n      return \"black\"; // Black for the rest of the grid\n    }));\n  };\n  const [grid, setGrid] = useState(generateGrid());\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setOffset(prev => (prev - 1 + columns) % columns); // Move left and loop back\n      setGrid(generateGrid());\n    }, timeout);\n    return () => clearInterval(interval);\n  }, [offset, timeout]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    style: {\n      gridTemplateColumns: `repeat(${columns}, 30px)`,\n      gridTemplateRows: `repeat(${rows}, 30px)`\n    },\n    children: grid.flat().map((color, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"square\",\n      style: {\n        backgroundColor: color\n      }\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Grid, \"M49PmDTLIukIetpe6l2iYVc2r6M=\");\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Grid","rows","columns","timeout","_s","offset","setOffset","generateGrid","Array","from","length","_","row","col","randomRed","Math","floor","random","randomGreen","randomBlue","grid","setGrid","interval","setInterval","prev","clearInterval","className","style","gridTemplateColumns","gridTemplateRows","children","flat","map","color","idx","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Hp/wave-grid/src/Grid.js"],"sourcesContent":[" // src/Grid.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./Grid.css\";\r\n\r\nconst Grid = ({ rows = 15, columns = 20, timeout = 200 }) => {\r\n  const [offset, setOffset] = useState(columns - 1); // Start from the rightmost column\r\n\r\n  // Generate grid with a vertical line at the current offset\r\n  const generateGrid = () => {\r\n    return Array.from({ length: rows }, (_, row) =>\r\n      Array.from({ length: columns }, (_, col) => {\r\n        if (col === offset) {\r\n          // Random color for the moving line\r\n          const randomRed = Math.floor(Math.random() * 256);\r\n          const randomGreen = Math.floor(Math.random() * 256);\r\n          const randomBlue = Math.floor(Math.random() * 256);\r\n          return `rgb(${randomRed}, ${randomGreen}, ${randomBlue})`;\r\n        }\r\n        return \"black\"; // Black for the rest of the grid\r\n      })\r\n    );\r\n  };\r\n\r\n  const [grid, setGrid] = useState(generateGrid());\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setOffset((prev) => (prev - 1 + columns) % columns); // Move left and loop back\r\n      setGrid(generateGrid());\r\n    }, timeout);\r\n    return () => clearInterval(interval);\r\n  }, [offset, timeout]);\r\n\r\n  return (\r\n    <div\r\n      className=\"grid\"\r\n      style={{\r\n        gridTemplateColumns: `repeat(${columns}, 30px)`,\r\n        gridTemplateRows: `repeat(${rows}, 30px)`,\r\n      }}\r\n    >\r\n      {grid.flat().map((color, idx) => (\r\n        <div\r\n          key={idx}\r\n          className=\"square\"\r\n          style={{\r\n            backgroundColor: color,\r\n          }}\r\n        ></div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n"],"mappings":";;AAAC;AACD,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAC;EAAEC,IAAI,GAAG,EAAE;EAAEC,OAAO,GAAG,EAAE;EAAEC,OAAO,GAAG;AAAI,CAAC,KAAK;EAAAC,EAAA;EAC3D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAACM,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;;EAEnD;EACA,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACzB,OAAOC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAET;IAAK,CAAC,EAAE,CAACU,CAAC,EAAEC,GAAG,KACzCJ,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAER;IAAQ,CAAC,EAAE,CAACS,CAAC,EAAEE,GAAG,KAAK;MAC1C,IAAIA,GAAG,KAAKR,MAAM,EAAE;QAClB;QACA,MAAMS,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;QACjD,MAAMC,WAAW,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;QACnD,MAAME,UAAU,GAAGJ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;QAClD,OAAO,OAAOH,SAAS,KAAKI,WAAW,KAAKC,UAAU,GAAG;MAC3D;MACA,OAAO,OAAO,CAAC,CAAC;IAClB,CAAC,CACH,CAAC;EACH,CAAC;EAED,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGzB,QAAQ,CAACW,YAAY,CAAC,CAAC,CAAC;EAEhDV,SAAS,CAAC,MAAM;IACd,MAAMyB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCjB,SAAS,CAAEkB,IAAI,IAAK,CAACA,IAAI,GAAG,CAAC,GAAGtB,OAAO,IAAIA,OAAO,CAAC,CAAC,CAAC;MACrDmB,OAAO,CAACd,YAAY,CAAC,CAAC,CAAC;IACzB,CAAC,EAAEJ,OAAO,CAAC;IACX,OAAO,MAAMsB,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACjB,MAAM,EAAEF,OAAO,CAAC,CAAC;EAErB,oBACEJ,OAAA;IACE2B,SAAS,EAAC,MAAM;IAChBC,KAAK,EAAE;MACLC,mBAAmB,EAAE,UAAU1B,OAAO,SAAS;MAC/C2B,gBAAgB,EAAE,UAAU5B,IAAI;IAClC,CAAE;IAAA6B,QAAA,EAEDV,IAAI,CAACW,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,kBAC1BnC,OAAA;MAEE2B,SAAS,EAAC,QAAQ;MAClBC,KAAK,EAAE;QACLQ,eAAe,EAAEF;MACnB;IAAE,GAJGC,GAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKJ,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnC,EAAA,CAhDIJ,IAAI;AAAAwC,EAAA,GAAJxC,IAAI;AAkDV,eAAeA,IAAI;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
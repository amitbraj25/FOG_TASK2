{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\wave-grid\\\\src\\\\Grid.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Grid.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Grid = ({\n  rows,\n  columns\n}) => {\n  _s();\n  const [grid, setGrid] = useState([]);\n  const [waveIndex, setWaveIndex] = useState(0);\n\n  // Function to generate a random color\n  const generateRandomColor = () => {\n    const r = Math.floor(Math.random() * 256);\n    const g = Math.floor(Math.random() * 256);\n    const b = Math.floor(Math.random() * 256);\n    return `rgb(${r}, ${g}, ${b})`;\n  };\n\n  // Initialize the grid with random colors\n  useEffect(() => {\n    const initializeGrid = () => {\n      const newGrid = Array.from({\n        length: rows\n      }, () => Array.from({\n        length: columns\n      }, () => ({\n        color: generateRandomColor(),\n        intensity: 0 // Intensity determines brightness\n      })));\n      setGrid(newGrid);\n    };\n    initializeGrid();\n  }, [rows, columns]);\n\n  // Wave animation logic\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setGrid(prevGrid => prevGrid.map((row, rowIndex) => row.map((cell, colIndex) => {\n        const distance = Math.abs(colIndex - waveIndex); // Distance from the wave\n        const intensity = Math.max(0, 1 - distance / 10); // Fade effect\n        return {\n          ...cell,\n          intensity\n        };\n      })));\n      setWaveIndex(prevIndex => (prevIndex + 1) % columns); // Move the wave\n    }, 200);\n    return () => clearInterval(interval);\n  }, [columns, waveIndex]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    style: {\n      gridTemplateColumns: `repeat(${columns}, 1fr)`\n    },\n    children: grid.map((row, rowIndex) => row.map((cell, colIndex) => {\n      const {\n        color,\n        intensity\n      } = cell;\n\n      // Adjust brightness based on intensity\n      const [r, g, b] = color.replace(\"rgb(\", \"\").replace(\")\", \"\").split(\", \").map(Number);\n      const adjustedColor = `rgb(${Math.floor(r * intensity)}, ${Math.floor(g * intensity)}, ${Math.floor(b * intensity)})`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell\",\n        style: {\n          backgroundColor: adjustedColor\n        }\n      }, `${rowIndex}-${colIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this);\n    }))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Grid, \"u4E38hCiTXRu3g4AIGOGeFFmxL8=\");\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Grid","rows","columns","_s","grid","setGrid","waveIndex","setWaveIndex","generateRandomColor","r","Math","floor","random","g","b","initializeGrid","newGrid","Array","from","length","color","intensity","interval","setInterval","prevGrid","map","row","rowIndex","cell","colIndex","distance","abs","max","prevIndex","clearInterval","className","style","gridTemplateColumns","children","replace","split","Number","adjustedColor","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Hp/wave-grid/src/Grid.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Grid.css\";\r\n\r\nconst Grid = ({ rows, columns }) => {\r\n  const [grid, setGrid] = useState([]);\r\n  const [waveIndex, setWaveIndex] = useState(0);\r\n\r\n  // Function to generate a random color\r\n  const generateRandomColor = () => {\r\n    const r = Math.floor(Math.random() * 256);\r\n    const g = Math.floor(Math.random() * 256);\r\n    const b = Math.floor(Math.random() * 256);\r\n    return `rgb(${r}, ${g}, ${b})`;\r\n  };\r\n\r\n  // Initialize the grid with random colors\r\n  useEffect(() => {\r\n    const initializeGrid = () => {\r\n      const newGrid = Array.from({ length: rows }, () =>\r\n        Array.from({ length: columns }, () => ({\r\n          color: generateRandomColor(),\r\n          intensity: 0, // Intensity determines brightness\r\n        }))\r\n      );\r\n      setGrid(newGrid);\r\n    };\r\n\r\n    initializeGrid();\r\n  }, [rows, columns]);\r\n\r\n  // Wave animation logic\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setGrid((prevGrid) =>\r\n        prevGrid.map((row, rowIndex) =>\r\n          row.map((cell, colIndex) => {\r\n            const distance = Math.abs(colIndex - waveIndex); // Distance from the wave\r\n            const intensity = Math.max(0, 1 - distance / 10); // Fade effect\r\n            return {\r\n              ...cell,\r\n              intensity,\r\n            };\r\n          })\r\n        )\r\n      );\r\n\r\n      setWaveIndex((prevIndex) => (prevIndex + 1) % columns); // Move the wave\r\n    }, 200);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [columns, waveIndex]);\r\n\r\n  return (\r\n    <div\r\n      className=\"grid\"\r\n      style={{\r\n        gridTemplateColumns: `repeat(${columns}, 1fr)`,\r\n      }}\r\n    >\r\n      {grid.map((row, rowIndex) =>\r\n        row.map((cell, colIndex) => {\r\n          const { color, intensity } = cell;\r\n\r\n          // Adjust brightness based on intensity\r\n          const [r, g, b] = color\r\n            .replace(\"rgb(\", \"\")\r\n            .replace(\")\", \"\")\r\n            .split(\", \")\r\n            .map(Number);\r\n\r\n          const adjustedColor = `rgb(${Math.floor(r * intensity)}, ${Math.floor(\r\n            g * intensity\r\n          )}, ${Math.floor(b * intensity)})`;\r\n\r\n          return (\r\n            <div\r\n              key={`${rowIndex}-${colIndex}`}\r\n              className=\"cell\"\r\n              style={{\r\n                backgroundColor: adjustedColor,\r\n              }}\r\n            ></div>\r\n          );\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}